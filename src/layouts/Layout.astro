---
export const prerender = true;
import { ViewTransitions } from "astro:transitions";
import { languageTag } from "@paraglide/runtime";
import Toast from "@components/common/toast.svelte";
import Header from "@components/common/header/Header.astro";
import SEO from "@components/common/SEO.astro";
import { ModeWatcher } from "mode-watcher";
import "@styles/app.css";
interface Props {
    description?: string;
    title: string;
    preloadImgLCP?: string;
    canonical?: string;
    image?: string;
}
const { title, description, preloadImgLCP, canonical, image } = Astro.props;
---

<html lang={languageTag()} dir={Astro.locals.paraglide.dir}>
    <head>
        <SEO
            title={title}
            description={description}
            preloadImgLCP={preloadImgLCP}
            canonical={canonical}
            image={image}
        />
        <ViewTransitions fallback="none" />
        <script is:inline>
            const isBrowser = typeof localStorage !== "undefined";
            const getThemePreference = () => {
                if (isBrowser && localStorage.getItem("theme")) {
                    return localStorage.getItem("theme");
                }
                return window.matchMedia("(prefers-color-scheme: dark)").matches
                    ? "dark"
                    : "light";
            };
            const isDark = getThemePreference() === "dark";
            document.documentElement.classList[isDark ? "add" : "remove"](
                "dark",
            );

            if (isBrowser) {
                const observer = new MutationObserver(() => {
                    const isDark =
                        document.documentElement.classList.contains("dark");
                    localStorage.setItem("theme", isDark ? "dark" : "light");
                });
                observer.observe(document.documentElement, {
                    attributes: true,
                    attributeFilter: ["class"],
                });
            }
        </script>
    </head>
    <body class="flex max-w-screen flex-col justify-between items-center">
        <ModeWatcher client:load />
        <Toast client:load />
        <Header />
        <main class="overflow-x-clip flex-1 mt-16 md:mt-24">
            <slot />
        </main>
    </body>
</html>
